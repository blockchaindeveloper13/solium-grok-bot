// BaÄŸÄ±mlÄ±lÄ±klarÄ± yÃ¼kle
const TelegramBot = require('node-telegram-bot-api');
const express = require('express');
const axios = require('axios');
require('dotenv').config();

// Express ve bot ayarlarÄ±
const app = express();
app.use(express.json()); // Webhook iÃ§in JSON isteklerini iÅŸle

const token = process.env.TELEGRAM_BOT_TOKEN;
const bot = new TelegramBot(token);

// Heroku app URL'si ve webhook ayarÄ±
const HEROKU_APP_NAME = process.env.HEROKU_APP_NAME || 'solium-grok-bot-741701423e96'; // Fallback
const webhookUrl = `https://${HEROKU_APP_NAME}.herokuapp.com/bot${token}`;
bot.setWebHook(webhookUrl).then(() => {
  console.log(`Webhook ayarlandÄ±: ${webhookUrl}`);
}).catch((error) => {
  console.error('Webhook ayarlanamadÄ±:', error.message);
});

// Tek content - TÃ¼m bilgiler burada
const content = `
Solium Coin (SLM) ile helal finans devrimine katÄ±l! ðŸŒ™
Proje: Solium Coin
Website: https://soliumcoin.com
Toplam Arz: 100,000,000 SLM
Presale: 50,000,000 SLM (50%)
Airdrop: 10,000,000 SLM (10%)
Blockchain: Binance Smart Chain (BSC) ve Solana
BSC Contract Address: 0x307a0dc0814CbD64E81a9BC8517441Ca657fB9c7
Solana Contract Address: 9rFLChxL7444pp1ykat7eoaFh76BiLEZNXUvn9Fpump

Tokenomics:
- Presale: 50M SLM (50%)
- Liquidity: 20M SLM (20%)
- Airdrop: 10M SLM (10%)
- Staking: 10M SLM (10%)
- GameFi & Rewards: 10M SLM (10%)

Ã–zellikler:
- %100 Adil Lansman: TakÄ±m tokenâ€™Ä± yok, dev Ã¼creti yok, Ã¶zel satÄ±ÅŸ yok.
- Web3 DeÄŸerleri: ÅžeffaflÄ±k, merkeziyetsizlik, topluluk odaklÄ±.
- Staking, DAO yÃ¶netimi, GameFi geniÅŸlemesi ve Ã§apraz zincir kÃ¶prÃ¼sÃ¼ planlanÄ±yor.
- ABD, Kanada veya OFAC yaptÄ±rÄ±mlÄ± Ã¼lke vatandaÅŸlarÄ±na aÃ§Ä±k deÄŸil.

Roadmap:
Q1 â€“ Lansman & Presale
- Token oluÅŸturuldu, akÄ±llÄ± kontrat deploy edildi (TamamlandÄ±)
- Website, GitHub, Medium, Telegram, X baÅŸlatÄ±ldÄ± (TamamlandÄ±)
- Presale baÅŸladÄ± (TamamlandÄ±)
- Ä°lk influencer iÅŸ birlikleri
- Topluluk bÃ¼yÃ¼mesi

Q2 â€“ BÃ¼yÃ¼me & GÃ¶rÃ¼nÃ¼rlÃ¼k
- DEXTools, CoinGecko, CoinMarketCap listelenmeleri
- Ä°lk CEX listelenmesi (Hedef: MEXC veya Bitget)
- Airdrop daÄŸÄ±tÄ±mÄ± (10M SLM)
- Topluluk katÄ±lÄ±mÄ± ve staking Dapp entegrasyonu

Q3 â€“ GeniÅŸleme
- Staking lansmanÄ± (10M SLM ayrÄ±ldÄ±)
- KuCoin & Binance listelenme hedefleri
- GameFi konsepti tanÄ±tÄ±mÄ±
- DAO geliÅŸtirme ve kÃ¶prÃ¼ araÅŸtÄ±rmasÄ±

Q4 â€“ Ekosistem GeliÅŸtirme
- GameFi lansmanÄ±, SLM kullanÄ±mÄ±
- GerÃ§ek dÃ¼nya entegrasyonlarÄ± & uzun vadeli staking
- KullanÄ±m odaklÄ± NFT koleksiyonu
- Global pazarlama ve topluluk geniÅŸlemesi

Resmi Linkler:
- Website: https://soliumcoin.com
- Telegram Grup: https://t.me/soliumcoinchat
- Telegram Kanal: https://t.me/soliumcoin
- Twitter/X: https://x.com/soliumcoin
- GitHub: https://github.com/soliumcoin/solium-project
- Medium: https://medium.com/@soliumcoin

Faydalar:
- HÄ±z: Binance Smart Chain ve Solana ile yÄ±ldÄ±rÄ±m hÄ±zÄ±nda iÅŸlemler.
- GÃ¼venlik: GeliÅŸmiÅŸ ÅŸifreleme protokolleri ile fonlar gÃ¼vende.
- Ã–lÃ§eklenebilirlik: YÃ¼ksek iÅŸlem hacimlerini destekleyen saÄŸlam platform.
- Topluluk OdaklÄ±: Projenin geliÅŸimini ÅŸekillendiren tutkulu bir topluluk.

ÅžeffaflÄ±k ve GÃ¼venlik:
- Denetlenen Kontratlar: BSC Kontrat Adresi: 0x307a0dc0814CbD64E81a9BC8517441Ca657fB9c7
- AÃ§Ä±k Kaynak Kod: GitHubâ€™da mevcut: https://github.com/soliumcoin/solium-project
- TakÄ±m Tokenâ€™Ä± Yok: Adil token daÄŸÄ±tÄ±mÄ±.

Airdrop ve Presale:
- Airdrop: Telegram grubuna katÄ±l (t.me/soliumcoinchat) ve BSC adresini paylaÅŸ. Her 7 gÃ¼nde 1M $SLM kazanma ÅŸansÄ±!
- Presale: https://soliumcoin.com adresinden MetaMask ile BNB kullanarak $SLM al (1 BNB = 10,000 $SLM). En iyi alÄ±cÄ±lar iÃ§in Ã¶dÃ¼ller:
  - 1.: 1M $SLM
  - 2.: 500K $SLM
  - 3.: 100K $SLM
  - 4.-10.: Ek Ã¶dÃ¼ller!

Solium Coin, blockchain dÃ¼nyasÄ±nÄ± devrimleÅŸtirmeyi hedefleyen Ã§Ä±ÄŸÄ±r aÃ§an bir kripto projesi. Airdrop ve Presaleâ€™e katÄ±larak geleceÄŸin parÃ§asÄ± ol. Daha fazla bilgi iÃ§in: https://soliumcoin.com #SoliumCoin #HelalFinans
`;

// Contentâ€™i promptâ€™a gÃ¶re seÃ§me
function selectContentByContext(prompt) {
  // Grok API hata verirse, contentâ€™ten rastgele bir parÃ§a seÃ§
  const lines = content.split('\n').filter(line => line.trim() !== '');
  // Promptâ€™a gÃ¶re uygun satÄ±rlarÄ± filtrele
  const relevantLines = lines.filter(line => 
    (prompt.toLowerCase().includes('presale') && line.toLowerCase().includes('presale')) ||
    (prompt.toLowerCase().includes('helal') && line.toLowerCase().includes('helal')) ||
    (prompt.toLowerCase().includes('etik') && line.toLowerCase().includes('etik')) ||
    (prompt.toLowerCase().includes('dubai') && line.toLowerCase().includes('dubai')) ||
    (prompt.toLowerCase().includes('bilgi') && line.toLowerCase().includes('solium coin'))
  );
  return relevantLines.length > 0 
    ? relevantLines[Math.floor(Math.random() * relevantLines.length)]
    : lines[Math.floor(Math.random() * lines.length)];
}

// Grok API'den iÃ§erik alma
async function getGrokContent(prompt, contextType = 'general') {
  try {
    if (!process.env.GROK_API_KEY) {
      console.warn('GROK_API_KEY eksik, contentâ€™ten seÃ§im yapÄ±lÄ±yor.');
      return selectContentByContext(prompt);
    }
    const response = await axios.post(
      'https://api.x.ai/grok',
      { 
        prompt: `AÅŸaÄŸÄ±daki iÃ§eriÄŸi kullanarak, kullanÄ±cÄ±nÄ±n sorusuna samimi bir tonda, helal finans vurgusu yaparak cevap ver. #SoliumCoin ekle.\n\n${content}\n\nSoru: ${prompt}` 
      },
      { headers: { Authorization: `Bearer ${process.env.GROK_API_KEY}` } }
    );
    const grokContent = response.data.content;
    if (!grokContent || grokContent.length < 10) {
      console.warn('Grok API iÃ§eriÄŸi geÃ§ersiz, contentâ€™ten seÃ§im yapÄ±lÄ±yor.');
      return selectContentByContext(prompt);
    }
    return grokContent;
  } catch (error) {
    console.error('Grok API hatasÄ±:', error.message);
    return selectContentByContext(prompt);
  }
}

// 3 saatte bir otomatik paylaÅŸÄ±m
setInterval(async () => {
  try {
    const content = await getGrokContent('Solium Coin iÃ§in kÄ±sa, Ã§arpÄ±cÄ± bir Telegram gÃ¶nderisi yaz.', 'presale');
    const message = `${content} ðŸš€ #SoliumCoin #HelalFinans\nDetaylar: https://soliumcoin.com`;
    if (message.length > 4096) {
      console.warn('Mesaj Ã§ok uzun, kÄ±saltÄ±lÄ±yor.');
      await bot.sendMessage('@soliumcoin', message.substring(0, 4090) + '...');
    } else {
      await bot.sendMessage('@soliumcoin', message);
    }
    console.log('PaylaÅŸÄ±m yapÄ±ldÄ±:', message);
  } catch (error) {
    console.error('PaylaÅŸÄ±m hatasÄ±:', error.message);
  }
}, 3 * 60 * 60 * 1000); // 3 saat (10800000 ms)

// Webhook endpoint
app.post(`/bot${token}`, (req, res) => {
  bot.processUpdate(req.body);
  res.sendStatus(200);
});

// KÃ¶k route (H81 hatalarÄ±nÄ± azaltmak iÃ§in)
app.get('/', (req, res) => {
  res.send('Solium Moon Bot Ã§alÄ±ÅŸÄ±yor!');
});

// Komut: /start
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, 'Kanka, Solium Moon Botâ€™a hoÅŸ geldin! ðŸŒ™\nSolium Coinâ€™le helal finans devrimine katÄ±l!\nKomutlar iÃ§in /help yaz.');
});

// Komut: /presale
bot.onText(/\/presale/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, 'Solium Coin presale fÄ±rsatÄ±nÄ± kaÃ§Ä±rma! ðŸ˜Ž\nMetamask cÃ¼zdanÄ±nÄ± hazÄ±rla: https://soliumcoin.com');
});

// Komut: /help
bot.onText(/\/help/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, 'Solium Moon Bot komutlarÄ±:\n/start - BaÅŸla\n/presale - Presale detaylarÄ±\n/help - Bu mesaj\n\nBotun mesajlarÄ±nÄ± alÄ±ntÄ±layarak Grokâ€™a soru sorabilirsin! ðŸš€');
});

// AlÄ±ntÄ± mesajla Grokâ€™u tetikleme
bot.on('message', async (msg) => {
  const chatId = msg.chat.id;
  // Botun kendi mesajlarÄ±nÄ± ve komutlarÄ± yoksay
  if (msg.from.id === bot.getMe().id || msg.text?.startsWith('/')) return;

  // AlÄ±ntÄ± mesaj varsa ve botun mesajÄ±na yanÄ±t ise
  if (msg.reply_to_message && msg.reply_to_message.from.id === (await bot.getMe()).id) {
    const userQuestion = msg.text || 'Sorun ne kanka?';
    try {
      const grokResponse = await getGrokContent(`KullanÄ±cÄ± ÅŸunu sordu: "${userQuestion}". Solium Coin odaklÄ±, samimi bir cevap ver.`, 'general');
      const reply = `Kanka, iÅŸte cevabÄ±n: ${grokResponse} ðŸ˜Ž\n#SoliumCoin #HelalFinans`;
      if (reply.length > 4096) {
        await bot.sendMessage(chatId, reply.substring(0, 4090) + '...', { reply_to_message_id: msg.message_id });
      } else {
        await bot.sendMessage(chatId, reply, { reply_to_message_id: msg.message_id });
      }
      console.log(`Grok cevabÄ± gÃ¶nderildi: ${reply}`);
    } catch (error) {
      console.error('Grok tetikleme hatasÄ±:', error.message);
      await bot.sendMessage(chatId, 'Ups, bir ÅŸeyler yanlÄ±ÅŸ gitti! ðŸ˜… Tekrar dene.', { reply_to_message_id: msg.message_id });
    }
  }
});

// Express sunucusunu baÅŸlat
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`Bot sunucusu ${PORT} portunda Ã§alÄ±ÅŸÄ±yor...`);
});
